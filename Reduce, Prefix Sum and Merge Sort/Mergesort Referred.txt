void merge(int array[], int l, int m, int r) 
{ 
    int i, j, k; 
    int n1 = m - l + 1; 
    int n2 =  r - m; 
  
    int A[n1], B[n2]; 
  
    for (i = 0; i < n1; i++) 
        A[i] = array[l + i]; 
    for (j = 0; j < n2; j++) 
        B[j] = array[m + 1+ j]; 
  
   
    i = 0; 
    j = 0; 
    k = l; 
    while (i < n1 && j < n2) 
    { 
        if (A[i] <= B[j]) 
        { 
            array[k] = A[i]; 
            i++; 
        } 
        else
        { 
            array[k] = B[j]; 
            j++; 
        } 
        k++; 
    } 
  
    while (i < n1) 
    { 
        array[k] = A[i]; 
        i++; 
        k++; 
    } 
  
    while (j < n2) 
    { 
        array[k] = B[j]; 
        j++; 
        k++; 
    } 
} 
  
void mergeSort(int array[], int l, int r) 
{ 
    if (l < r) 
    { 
        int mid = l+(r-l)/2; 
  
        mergeSort(array, l, m); 
        mergeSort(array, mid+1, r); 
  
        merge(array, l, mid, r); 
    } 
} 
  

  
int main() 
{ 
    int array[] = {12, 11, 13, 5, 6, 7}; 
  
    printf("Given array is \n"); 
    printArray(arr, arr_size); 
    int arr_size = sizeof(array);

    mergeSort(array, 0, arr_size - 1); 

    return 0; 
} 